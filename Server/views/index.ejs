<!DOCTYPE html>
<html>
<head>
    <title>Highlighted Texts</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        .domain,
        .highlighted-texts {
            max-width: 600px; /* Adjust the value as needed */
            margin-left: auto;
            margin-right: auto;
            padding-left: 20px;
            padding-right: 20px;
        }
        /* Add this CSS to your existing styles */
        @media screen and (max-width: 600px) {
            .domain,
            .highlighted-texts {
                max-width: 100%;
                padding-left: 10px;
                padding-right: 10px;
                list-style-type: none;
            }
}

        body {
            font-family: 'Courier New', Courier, monospace;
            margin: 0;
            padding: 0;
            background-color: #1c1c1c;
            color: #d0d0d0;
        }

        .domain {
            margin-bottom: 10px;
            background-color: #2c2c2c;
            border: 1px solid #3a3a3a;
            padding: 10px;
            border-radius: 5px;
            /*max-width: 900px; /* Adjust the value as needed */

        }

        ul {
            padding: 0;
            list-style: none;
        }

        .domain h1 {
            cursor: pointer;
            margin: 0;
            font-size: 16px;
            line-height: 1.2;
            color: #4eadeb;
            font-size: 18px;
        }

        .highlighted-texts {
            background: #1c1c1c;
            padding: 5px;
            text-align: justify;
            list-style-type: none;
            margin: 0;
            display: none;
        }

        .highlighted-texts li {
            margin-bottom: 10px;
            border: 1px solid #3a3a3a;
            padding: 10px;
            background-color: #2c2c2c;
            border-radius: 5px;
            position: relative;
        }

        .highlighted-texts div {
            margin-bottom: 5px;
        }

        .highlighted-texts a {
            display: inline-block;
            color: #4eadeb;
            text-decoration: none;
            border-bottom: 1px solid #4eadeb;
        }

        @media (max-width: 768px) {
            .domain {
                margin-bottom: 20px;
            }

            .highlighted-texts li {
                margin-bottom: 15px;
            }
        }

        .timestamp{
            font-size: 13px;
        }

        .delete-button {
            background-color: #2c2c2c;
            border: 1px solid #4eadeb;
            color: #4eadeb;
            padding: 5px 10px;
            font-family: 'Courier New', Courier, monospace;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.3s, color 0.3s;
            position: absolute;
            bottom: 10px; 
            right: 10px; 
        }

        .delete-button:hover {
            background-color: #4eadeb;
            color: #2c2c2c;
        }
    </style>
</head>
<body>
    <ul>
        <% for (const domain of domains) { %>
            <li class="domain">
                <h1 tabindex="0"><%= domain.domain %></h1>
                <ul class="highlighted-texts" style="display: none;">
                    <% for (const text of domain.highlightedTexts) { %>
                        <li>
                            <div class="timestamp"><%= text.timestamp %></div>
                            <div class="text"><%= text.text %></div>
                            <a href="<%= text.url %>" target="_blank">Open URL</a>
                            <button class="delete-button" data-id="<%= text.id %>" onclick="deleteText('<%= text.id %>')">Delete</button>
                        </li>
                    <% } %>
                </ul>
            </li>
        <% } %>
    </ul>

    <script>
        const h1Elements = document.querySelectorAll('.domain h1');

        h1Elements.forEach((h1Element) => {
            h1Element.addEventListener('click', () => {
                toggleHighlightedTexts(h1Element);
            });

            h1Element.addEventListener('keydown', (event) => {
                if (event.key === 'Enter' || event.key === ' ') {
                    event.preventDefault();
                    toggleHighlightedTexts(h1Element);
                }
            });
        });

        function toggleHighlightedTexts(h1Element) {
            const highlightedTexts = h1Element.nextElementSibling;
            highlightedTexts.style.display = highlightedTexts.style.display === 'none' ? 'block' : 'none';
        }


    function deleteText(id) {
        if (confirm("Are you sure you want to delete this entry?")) {
            fetch(`/delete/${id}`, {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
                alert(data.message);
                // Remove the deleted entry from the DOM
                const deletedElement = document.querySelector(`[data-id="${id}"]`);
                if (deletedElement) {
                    deletedElement.parentElement.remove();
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while deleting the entry.');
            });
        }
    }
    </script>
</body>
</html>